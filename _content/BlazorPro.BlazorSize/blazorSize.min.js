!function(){"use strict";class e{constructor(e){this.id=e,this.dotnetCallback=e=>{},this.mediaQueries=[]}}class i{constructor(){this.reportRate=300,this.enableLogging=!1,this.suppressInitEvent=!1}}window.blazorSizeMedia=new class{constructor(){this.mediaQueryLists=new Array,this.getMediaQueryListById=e=>{let i=this.mediaQueryLists.find(i=>i.id===e);if(void 0===i)throw new Error("dotnet reference was not found in the collection of media query lists");return i}}getMediaQueryArgs(e){let i=window.matchMedia(e);return{matches:i.matches,media:i.media}}addMediaQueryToList(e,i){let t=window.matchMedia(i),s=this.getMediaQueryListById(e._id);return t.addListener(s.dotnetCallback),s.mediaQueries.push(t),{matches:t.matches,media:t.media}}callbackReference(e){return i=>{e.invokeMethodAsync("MediaQueryChanged",{matches:i.matches,media:i.media})}}addMediaQueryList(i){let t=new e(i._id);t.dotnetCallback=this.callbackReference(i),this.mediaQueryLists.push(t)}removeMediaQuery(e,i){let t=this.getMediaQueryListById(e._id),s=t.mediaQueries,r=s.find(e=>e.media==i);null==r||r.removeListener(t.dotnetCallback),t.mediaQueries=s.filter(e=>e.media!==(null==r?void 0:r.media))}removeMediaQueryList(e){let i=this.getMediaQueryListById(e._id);i.mediaQueries.forEach(e=>e.removeListener(i.dotnetCallback)),this.mediaQueryLists=this.mediaQueryLists.filter(i=>i.id!==e._id)}},window.blazorSize=new class{constructor(){this.logger=e=>{},this.options=new i,this.throttleResizeHandlerId=-1,this.resizeHandler=()=>{this.dotnet.invokeMethodAsync("RaiseOnResized",{height:window.innerHeight,width:window.innerWidth}),this.logger("[BlazorSize] RaiseOnResized invoked")},this.throttleResizeHandler=()=>{clearTimeout(this.throttleResizeHandlerId),this.throttleResizeHandlerId=window.setTimeout(this.resizeHandler,this.options.reportRate)}}listenForResize(e,i){this.options=i,this.dotnet=e,this.logger=i.enableLogging?console.log:e=>{},this.logger(`[BlazorSize] Reporting resize events at rate of: ${this.options.reportRate}ms`),window.addEventListener("resize",this.throttleResizeHandler),this.options.suppressInitEvent||this.resizeHandler()}cancelListener(){window.removeEventListener("resize",this.throttleResizeHandler)}matchMedia(e){let i=window.matchMedia(e).matches;return this.logger(`[BlazorSize] matchMedia "${e}": ${i}`),i}getBrowserWindowSize(){return{height:window.innerHeight,width:window.innerWidth}}}}();
